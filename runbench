#!/usr/bin/env ruby

require 'fileutils'

SLEEP_BETWEEN_RUNS=5
BINDIR="./target/bins/"

FileUtils.mkdir_p BINDIR

def runsys(cmd)
  puts cmd
  if !system(cmd)
    $stderr.puts "ERROR running command"
    exit 2
  end
end

bins = []

{
  "base"         => "-O3", 
  "march-native" => "-O3 -march=native",
  "march-native-ffast-math"   => "-O3 -march=native -ffast-math",
}.each do |name, opts|
  bench = "#{BINDIR}/clangbench-#{name}"
  if !File.exist?(bench)
    puts "Compiling #{bench}"
    runsys "clang #{opts} test.c -o #{bench}"
  end
  bins << ["clang #{name}", bench]

  bench = "#{BINDIR}/gccbench-#{name}"
  if !File.exist?(bench)
    puts "Compiling #{bench}"
    runsys "gcc #{opts} test.c -o #{bench}"
  end
  bins << ["gcc #{name}", bench]
end

{
  "base"         => "", 
  "march-native" => "-C target-cpu=native",
# This should work but doesn't seem to
#  "ffast-math"   => "-C target-cpu=native -C llvm-args=\"-ffast-math\"",
}.each do |name, opts|
  bench = "#{BINDIR}/rustbench-#{name}"
  if !File.exist?(bench)
    puts "Compiling #{bench}"
    FileUtils.rm_rf "./target/release/"
    runsys "RUSTFLAGS=\"#{opts}\" cargo +nightly build --release"
    FileUtils.cp "./target/release/rustc-math-bench", bench
  end
  bins << ["rustc #{name}", bench]
end

bins.each do |bin|
  sleep SLEEP_BETWEEN_RUNS
  puts "=> #{bin[0]}"
  if !system(bin[1])
    $stderr.puts "ERROR running benchmark"
    exit 2
  end
end
